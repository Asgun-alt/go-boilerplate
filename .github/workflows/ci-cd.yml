name: CI/CD Pipeline

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.1

    - name: Go Mod Vendor
      run: |
        git config --global url."https://${{ secrets.GH_USERNAME }}:${{ secrets.GH_PAT }}@github.com".insteadOf "https://github.com"
        go version
        go mod vendor

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: build and push docker
      run: |
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        TAG_NAME=${BRANCH_NAME}-$(git rev-parse HEAD)
        echo $TAG_NAME
        docker build --no-cache --rm -f dockerfile -t ${{ secrets.IMAGE_NAME }}:${TAG_NAME} .
        docker push ${{ secrets.IMAGE_NAME }}:${TAG_NAME}
        docker tag ${{ secrets.IMAGE_NAME }}:${TAG_NAME} ${{ secrets.IMAGE_NAME }}:latest
        docker push ${{ secrets.IMAGE_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Main
      run: |
        echo "${{ secrets.SERVER_SSH_KEY }}" > deploy_key.pem
        chmod 600 deploy_key.pem
        scp -o StrictHostKeyChecking=no -i deploy_key.pem deploy_script.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.HOME_SERVICE }} 
        ssh -o StrictHostKeyChecking=no -i deploy_key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} 'export SERVICE_NAME=${{ secrets.SERVICE_NAME }} && export SERVICE_PORT=${{ secrets.SERVICE_PORT }} && export VOLUME_LOG=${{ secrets.VOLUME_LOG }} && export VOLUME_CONFIG=${{ secrets.VOLUME_CONFIG }} && export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} && export DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }} && cd ${{ secrets.HOME_SERVICE }} && bash deploy_script.sh'
    
    
